proc print_new_line
    "
" print
procend

proc print_endline
    print print_new_line
procend

proc print_string_n_times
    dup 0 != if
        over print -1 + print_string_n_times
    else
        drop drop
    end
procend

proc iter_fact
    dup
    while over 1 > do
        over  -1 + *
        swap -1 + swap
    end
    swap drop
procend

proc rec_fact
    dup 2 >= if
        dup -1 + rec_fact *
    end
procend

    proc invert2elem
    var invert2elem_tmp
    var i1
    var i2
    var e1
    var e2
    var index
    debugger
     dup dup > if
        last i1 transfer last i2 transfer
     else
        last i2 transfer last i1 transfer    
     end
    in index 0 debugger return
     while isempty !! do
        in index dup return index last transfer
        in i1 dup return i1 last transfer
        = if
            dup last e1 transfer
            last invert2elem_tmp transfer
        else
            in index dup return
            index last transfer
            in i2 dup return i2 last transfer
            = if
                last e2 transfer
                e1 invert2elem_tmp dump
            else
                last invert2elem_tmp transfer
            end
        end
        in index 1 + return
     end
    invert2elem_tmp last dump
    index purge
    invert2elem_tmp purge
    in index 0 return
    while isempty !! do
        in index dup return index last transfer
        in i1 dup return i1 last transfer
        = if
            dump e2 invert2elem_tmp
        else
            last invert2elem_tmp transfer
    end
    invert2elem_tmp last dump
procend

proc curr_stack_length
    var tmp


procend

proc rev
    dup length -1 + 
    var std_lib_proc_rev 
    in std_lib_proc_rev "" 
    return
    while dup 0 >= do
        over over -1 * over length -1 + +
        swap .
        std_lib_proc_rev last transfer + last std_lib_proc_rev transfer
        -1 +
    end
    std_lib_proc_rev last dump
    swap drop swap drop
procend


proc revstack
    var proc_revstack_tmp
    while isempty !! do
        last proc_revstack_tmp transfer
    end
    proc_revstack_tmp last dump
procend


proc stack_length
    var proc_stack_length_counter in proc_stack_length_counter 0 return
    var tmp_stack
    while isempty !! do
        proc_stack_length_counter last transfer 1 + last proc_stack_length_counter transfer
        last tmp_stack transfer
    end
    tmp_stack last dump revstack
    proc_stack_length_counter last dump
procend


proc ith_elem
    var proc_ith_elem_target last proc_ith_elem_target transfer 
    var proc_ith_elem_counter in proc_ith_elem_counter 0 return
    var proc_ith_elem_tmp_stack 
    var proc_ith_elem_res 
    while isempty !!  do
        in proc_ith_elem_counter dup return in proc_ith_elem_target dup return
        proc_ith_elem_counter last transfer proc_ith_elem_target last transfer = if
            dup last proc_ith_elem_res transfer
        end
        last proc_ith_elem_tmp_stack transfer
        proc_ith_elem_counter last transfer 1 + last proc_ith_elem_counter transfer
    end
    in proc_ith_elem_tmp_stack revstack return
    proc_ith_elem_tmp_stack last dump
    proc_ith_elem_res last dump
    proc_ith_elem_target purge
    proc_ith_elem_counter purge
    proc_ith_elem_tmp_stack purge
    proc_ith_elem_res purge
procend